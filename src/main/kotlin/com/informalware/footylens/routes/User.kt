package com.informalware.footylens.routes

import com.informalware.footylens.data.User
import com.informalware.footylens.data.mocks.getUserById
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.request.*
import io.ktor.server.response.*
import io.ktor.server.routing.*


fun Application.userRoutes() {
    routing {
        get("/users/{id}") {
            call.parameters["id"]?.let {id ->
                when (val user = getUserById(id)) {
                    is User -> {
                        val body = call.receive<Map<String, List<String>>>()

                        // A request espera receber todas as propriedades do usuÃ¡rio
                        if (!body.containsKey("properties")) {
                            call.respond(user)
                        } else { // A request que apenas uma parte das propriedades
                            call.respond(user.getPartial(body["properties"]!!))
                        }
                    }
                    null -> call.respond(HttpStatusCode.NotFound, mapOf("error" to "$id is not a registered user"))
                }
            }
        }
    }
}