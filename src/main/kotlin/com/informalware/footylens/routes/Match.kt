package com.informalware.footylens.routes

import com.informalware.footylens.data.Match
import com.informalware.footylens.data.mocks.getMatch

import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.request.*
import io.ktor.server.response.*
import io.ktor.server.routing.*


fun Application.matchRoutes() {
    routing {
        get("/match/{id}") {
            call.parameters["id"]?.let {id ->
                when (val match = getMatch(id.toUInt())) {
                    is Match -> {
                        val body = call.receive<Map<String, Boolean>>()

                        if (!body.containsKey("summarized")) {
                            call.respond(match.toSummarized())
                        } else {
                            call.respond(match)
                        }
                    }
                    null -> call.respond(HttpStatusCode.NotFound, mapOf("error" to "$id is not a match"))
                }
            }
        }
    }
}