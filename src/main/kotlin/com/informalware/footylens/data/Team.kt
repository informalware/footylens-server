package com.informalware.footylens.data

import kotlinx.serialization.Serializable
import org.ktorm.dsl.QueryRowSet
import org.ktorm.schema.*


/**
 * Objeto que representa um time armazenado no banco de dados.
 * @property id Identificador Ãºnico do time.
 * @property name Nome do time.
 * @property league ID da liga a qual o time pertence.
 * */
@Serializable
data class Team(
    var id: Int,
    var name: String,
    var league: String
)

/**
 * Table do Ktorm para os times
 */
object Teams : BaseTable<Team>("teams") {
    val id = int("id").primaryKey()
    val name = varchar("name")
    val league = varchar("league")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Team {
        return Team(
            id = row[id] ?: 0,
            name = row[name] ?: "",
            league = row[league] ?: ""
        )
    }
}

@Serializable
data class TeamFollows(
    val team_id: Int,
    val follower_id: Int
)

object TeamsFollows : BaseTable<TeamFollows>("team_follows") {
    val team_id = int("team_id")
    val follower_id = int("follower_id")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): TeamFollows {
        return TeamFollows(
            team_id = row[team_id] ?: 0,
            follower_id = row[follower_id] ?: 0
        )
    }
}