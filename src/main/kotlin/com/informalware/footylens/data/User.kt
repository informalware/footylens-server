package com.informalware.footylens.data

import kotlinx.serialization.Serializable

/**
 * Objeto que representa um usuário armazenado no banco de dados. Usuários serão indexados pelo `username`
 * @property username nome do usuário, usado como PK pelo DB
 * @property display nome de exibição do usuário usado no frontend
 * @property email email do usuário
 * @property bio descrição do usuário exibida no seu perfil no frontend
 * @property followingList lista de pessoas que o usuário segue
 * @property reviewsList lista de reviews feitas
 * @property commentariesList list de comentários feitos
 *
 * */
@Serializable
data class User(
    var username: String,
    var password: String,
    var display: String,
    var email: String,
    var bio: String,
    var followingList: List<String> = listOf(),
    var reviewsList: List<UInt> = listOf(),
    var commentariesList: List<UInt> = listOf()
    ) {
    fun getPartial(fields: List<String>): Map<String, String> {
        val result = mutableMapOf<String, String>()

        for (field in fields) {
            var data: String? = null
            when (field) {
                "username" -> data = this.username
                "display" -> data = this.display
                "email" -> data = this.email
                "bio" -> data = this.bio
            }

            if (data == null) continue
            else result[field] = data
        }


        return result
    }
}

/**
 * Estrutura recebida pelo endpoint de registro para cadastrar um novo usuário
 * */
@Serializable
data class UserRegistryRequest(
    val username: String,
    val password: String,
    val display: String,
    val email: String
) {
    /**
     * Produz um usuário para ser adicionado no registro
     * */
    fun toUser(): User = User(
        username,
        password,
        display,
        email,
        "",
    )
}