package com.informalware.footylens.data

import kotlinx.serialization.Serializable
import org.ktorm.dsl.QueryRowSet
import org.ktorm.schema.*

import java.util.Date

/**
 * Objeto que representa uma partida, seja armazenada no banco de dados ou
 * recebida de uma requisição da API.
 * @property id Identificador único da partida.
 * @property home Nome do time mandante.
 * @property visitor Nome do time visitante.
 * @property scoreboard Estado atual da partida.
 * @property stats Estado atual da partida.
 * */
@Serializable
data class Match(
    val id: Int,
    val home: Int,
    val visitor: Int,
    val scoreboard: Pair<Int, Int>
)

object Matches : BaseTable<Match>("matches") {
    val id = int("id").primaryKey()
    val home = int("home")
    val visitor = int("visitor")
    val home_scoreboard = int("home_scoreboard")
    val visitor_scoreboard = int("visitor_scoreboard")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Match {
        return Match(
            id = row[id] ?: 0,
            home = row[home] ?: 0,
            visitor = row[visitor] ?: 0,
            scoreboard = Pair(row[home_scoreboard] ?: 0, row[visitor_scoreboard] ?: 0)
        )
    }
}

