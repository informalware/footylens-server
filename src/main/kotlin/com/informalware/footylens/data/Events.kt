package com.informalware.footylens.data

import kotlinx.serialization.Serializable
import org.ktorm.entity.Entity
import org.ktorm.schema.*

enum class EventTypes {
    YELLOW, RED, GOAL, PENALTY
}

object Events : Table<Event>("Events") {
    val id = int("id").primaryKey().bindTo { it.id }
    val event = int("event").bindTo { it.event.toInt() }
    val time = int("time").bindTo { it.time }
    val playerId = int("playerId").bindTo { it.playerId }
    val matchId = int("matchId").bindTo { it.matchId }
    val teamId = int("teamId").bindTo { it.teamId }
}

/**
 * Objeto que representa eventos de uma partida
 * @property id Identificador único do evento.
 * @property event Tipo do evento.
 * @property time Data e hora do evento
 * @property playerId Identificador do jogador que participou do evento.
 * @property matchId Identificador da partida onde o evento ocorreu.
 * @property teamId Identificador do time do jogador envolvido no evento.
 * */
@Serializable
sealed interface Event : Entity<Event> {
    val id: Int
    val event: EventTypes
    val time: Int
    val playerId: Int
    val matchId: Int
    val teamId: Int
}


/**
 * Função para transformar um Enum em um Int
 * */
inline fun <reified T : Enum<T>> T.toInt(): Int {
    return this.ordinal
}
