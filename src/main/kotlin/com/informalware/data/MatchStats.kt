package com.informalware.data

import com.informalware.data.util.DateSerializer
import kotlinx.serialization.Serializable

import java.util.Date

/**
 * Objeto que representa eventos de uma partida
 * @property time Data e hora do evento
 * @property playerId Identificador do jogador que participou do evento.
 * @property team Indica o time do jogador envolvido no evento.
 * */
@Serializable
open class Event(
    var time: Date,
    var playerId: UInt,
    var team: Int
)


/**
 * Objeto que representa um gol em uma partida.
 * @property isPenalty Indica se o gol foi marcado em uma cobrança de pênalti.
 * */
@Serializable
data class Goal(
    var isPenalty: Boolean
) : Event(time, playerId, team)



/**
 * Objeto que representa cartões em uma partida.
 * @property color Cor do cartão, podendo ser "yellow" ou "red".
 * */
@Serializable
data class Card(
    var color: String
) : Event(time, playerId, team)



/**
 * Objeto que representa as estatísticas de uma partida, seja armazenada no banco de dados ou
 * recebida de uma requisição da API. Acompanha um tipo Match.
 * @property scoreboard Placar da partida, onde o primeiro elemento é o número de gols do time mandante e o segundo é o número de gols do time visitante.
 * @property start Data de início da partida.
 * @property finish Data de término da partida, se existir.
 * */
@Serializable
data class MatchStats(
    var scoreboard: Array<UInt> = Array(2) { 0u },

    @Serializable(with = DateSerializer::class)
    val start: Date,
    @Serializable(with = DateSerializer::class)
    var finish: Date? = null,

    var goals: List<Goal> = ListOf(),
    var cards: List<Card> = ListOf()
)